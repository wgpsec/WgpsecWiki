(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{791:function(s,n,e){"use strict";e.r(n);var t=e(105),a=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"nodejs原型链污染"}},[s._v("nodejs原型链污染 "),e("a",{staticClass:"header-anchor",attrs:{href:"#nodejs原型链污染"}},[s._v("#")])]),s._v(" "),e("p",[s._v("js 是由对象组成的，对象与对象之间存在着继承关系")]),s._v(" "),e("p",[s._v("每个对象都有一个指向它的原型的内部链接，而这个原型对象又有他自己的原型，直到 null 为止")]),s._v(" "),e("p",[s._v("整体看来就是多个对象层层继承，实例对象的原型链接形成了一条链，也就是 js 的原型链")]),s._v(" "),e("p",[s._v("在 js 中每个函数都有一个 prototype 属性，而每个对象中也有一个 "),e("strong",[s._v("proto")]),s._v(" 属性用来指向实例对象的原型")]),s._v(" "),e("p",[s._v("而每个原型也都有一个 constructor 属性执行相关联的构造函数，我们就是通过构造函数生成实例化的对象")]),s._v(" "),e("p",[e("img",{attrs:{src:"/images/js-prototype-chain-pollution/3.png",alt:"3.png"}})]),s._v(" "),e("p",[s._v("由于对象之间存在继承关系，所以当我们要使用或者输出一个变量就会通过原型链向上搜索，当上层没有就会再向上上层搜索，直到指向 null，若此时还未找到就会返回 undefined")]),s._v(" "),e("p",[s._v("这幅图的原型链是 cat->Cat.protype->Object.prototype->null")]),s._v(" "),e("p",[s._v("而如果修改了一个对象的原型，那么会影响所有来自于这个原型的对象，这就是原型链污染")]),s._v(" "),e("p",[s._v("原型链污染通常出现在对象，数组的键名或者属性名可控，同时是赋值语句的情况下 ( 通常使用 json 传值 )")]),s._v(" "),e("p",[s._v("可以使用 npm audit 检查漏洞，（npm audit 是 npm 6新增的一个命令，可以允许开发人员分析复杂的代码并查明特定的漏洞）")]),s._v(" "),e("p",[e("img",{attrs:{src:"/images/js-prototype-chain-pollution/2.png",alt:"2.png"}})]),s._v(" "),e("p",[s._v("其中常见的危险函数有")]),s._v(" "),e("p",[s._v("merge()")]),s._v(" "),e("p",[s._v("clone()")]),s._v(" "),e("p",[s._v("以及一些插件，例如比赛中出现的")]),s._v(" "),e("p",[s._v("Ciscn2020 初赛\tset-value")]),s._v(" "),e("p",[s._v("网鼎杯2020 青龙组\tundefsafe  版本<2.0.3")]),s._v(" "),e("p",[s._v("以下用比赛中的一个环境举例")]),s._v(" "),e("p",[s._v("目标是修改预设好的 Admin[key] 使它等于我们传入的 password")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('router.post("/DeveloperControlPanel", function (req, res, next) {\n    // not implement\n    if (req.body.key === undefined || req.body.password === undefined){\n        res.send("What\'s your problem?");\n    }else {\n        let key = req.body.key.toString();\n        let password = req.body.password.toString();\n        if(Admin[key] === password){\n            res.send("You get flag !");\n        }else {\n            res.send("Wrong password!Are you Admin?");\n        }\n    }\n});\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("以下为可利用的关键代码，稍微改改源码后本地起一个服务")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('const setFn = require(\'set-value\');\nrouter.get(\'/SpawnPoint\', function (req, res, next) {\n    req.session.knight = {\n        "HP": 1000,\n        "Gold": 10,\n        "Firepower": 10\n    }\n    res.send("Let\'s begin!");\n});\n\nrouter.post("/Privilege", function (req, res, next) {\n    // Why not ask witch for help?\n    if(req.session.knight === undefined){\n        res.redirect(\'/SpawnPoint\');\n    }else{\n        if (req.body.NewAttributeKey === undefined || req.body.NewAttributeValue === undefined) {\n            res.send("What\'s your problem?");\n        }else {\n            let key = req.body.NewAttributeKey.toString();\n            let value = req.body.NewAttributeValue.toString();\n            setFn(req.session.knight, key, value);\n            res.send("OK");\n\t\t\tconsole.dir(req.session.knight.__proto__)\n        }\n    }\n});\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[s._v("可以看到此处存在一个赋值操作，同时键名和键值都可控")]),s._v(" "),e("p",[e("img",{attrs:{src:"/images/js-prototype-chain-pollution/4.png",alt:"4.png"}})]),s._v(" "),e("p",[s._v("req.session.knight 添加了新的属性")]),s._v(" "),e("p",[e("img",{attrs:{src:"/images/js-prototype-chain-pollution/5.png",alt:"5.png"}})]),s._v(" "),e("p",[s._v("结合上面所说，我们可以直接利用这里给原链赋值，从而给之后的所有原型都加上一个新的属性，然后验证新添加的键名，并传入键值即可达成目标")]),s._v(" "),e("p",[s._v("req.session.knight 的上上层是 null ，给它的原链加一个新属性")]),s._v(" "),e("p",[e("img",{attrs:{src:"/images/js-prototype-chain-pollution/7.png",alt:"7.png"}})]),s._v(" "),e("p",[s._v("添加成功")]),s._v(" "),e("p",[e("img",{attrs:{src:"/images/js-prototype-chain-pollution/6.png",alt:"6"}})]),s._v(" "),e("p",[s._v("由于 Admin 没有这个变量就会通过原型链向上搜索，从而找到我们刚添加的 newpsw")]),s._v(" "),e("p",[e("img",{attrs:{src:"/images/js-prototype-chain-pollution/8.png",alt:"8.png"}})]),s._v(" "),e("p",[s._v("可以发现我们成功污染了原型链，并通过了验证")])])}),[],!1,null,null,null);n.default=a.exports}}]);